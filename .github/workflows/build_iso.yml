env:
  version: 3.21

name: Alpine ISO Builder

on:
  push:

jobs:
  build_ISOs:
    runs-on: ubuntu-24.04
    container:
      image: alpine:3.21

    steps:
      - name: Install software
        run: |
          apk update
          apk upgrade
          apk --no-cache add alpine-sdk build-base apk-tools alpine-conf \
              busybox fakeroot syslinux xorriso squashfs-tools sudo mtools \
              dosfstools grub-efi github-cli

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download aports
        run: git clone --depth=1 https://gitlab.alpinelinux.org/alpine/aports.git

      - name: Configure build keys
        run: echo | abuild-keygen -i -a

      - name: Make ISO
        run: |
          chmod +x *.sh
          cp *.sh aports/scripts/
          cd aports/scripts/

          ./mkimage.sh \
              --tag ${version}-$(date +%y%m%d) \
              --arch x86_64 \
              --profile docker \
              --outdir ../../ \
              --repository https://dl-cdn.alpinelinux.org/alpine/v${version}/main \
              --repository https://dl-cdn.alpinelinux.org/alpine/v${version}/community

          ./mkimage.sh \
              --tag ${version}-$(date +%y%m%d) \
              --arch x86_64 \
              --profile podman \
              --outdir ../../ \
              --repository https://dl-cdn.alpinelinux.org/alpine/v${version}/main \
              --repository https://dl-cdn.alpinelinux.org/alpine/v${version}/community

      - name: Upload ISO
        if: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: alpine_${{ env.version }}_iso
          path: ./*.iso

      - name: Release AlpDock ISO
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --global --add safe.directory .
          echo -e "Changelog\n---------" > changelog.txt
          git log --reverse --pretty=format:"- %h: %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD | egrep -v 'fix:|minor:|typo:' >> changelog.txt

          gh release create ${{ github.ref_name }} \
            --verify-tag \
            --latest \
            --notes-file changelog.txt \
            *.iso
